#!/usr/bin/env bash
#
# Claude Config CLI - Unified interface for Claude Code configuration
# https://github.com/sungjunlee/claude-config
#

set -euo pipefail

# Configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LIB_DIR="$SCRIPT_DIR/lib"
PROFILES_DIR="$SCRIPT_DIR/profiles"

# Load common functions
source "$LIB_DIR/common.sh"
source "$LIB_DIR/profile.sh"

# Show help
show_help() {
    cat << EOF
Claude Config CLI - Manage Claude Code configurations

Usage: claude <command> [options]

Commands:
    install                 Install account-level configuration
    init <language>         Initialize project with language profile
    inject <profiles>       Inject specific profiles into current project
    list                    List available profiles
    help                    Show this help message

Examples:
    # Install account-level configuration
    claude install

    # Initialize Python project
    claude init python

    # Initialize with options
    claude init javascript --with-testing --strict

    # Inject multiple profiles
    claude inject python+testing+strict

    # List available profiles
    claude list

For more information, visit:
https://github.com/sungjunlee/claude-config
EOF
}

# Main command dispatcher
main() {
    local command="${1:-}"
    
    if [[ -z "$command" ]]; then
        show_help
        exit 0
    fi
    
    case "$command" in
        install)
            shift
            exec "$SCRIPT_DIR/install.sh" "$@"
            ;;
        
        init)
            shift
            exec "$SCRIPT_DIR/scripts/init.sh" "$@"
            ;;
        
        inject)
            shift
            exec "$SCRIPT_DIR/scripts/inject.sh" "$@"
            ;;
        
        list)
            shift
            list_profiles "$@"
            ;;
        
        help|--help|-h)
            show_help
            exit 0
            ;;
        
        *)
            error "Unknown command: $command"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# Run main function
main "$@"